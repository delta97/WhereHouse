zipcodes <- as.data.frame(zipcodes$Zipcode)
zipcodes <- as.data.frame("zipcodes")
View(zipcodes)
zipcodes <- read.csv("test.csv")
View(warehouse)
warehouse <- inner_join(warehouse, zipcodes, by = "Street")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
warehouse <- inner_join(warehouse, zipcodes, by = "Street")
View(Street)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state, price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
temp <- c(dry, temp_cont, cooler)
dry <- 75
temp_cont <- 65
cooler <- 34
temp <- c(dry, temp_cont, cooler)
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
zipcodes <- tibble::rowid_to_column(zipcodes, "ID")
View(zipcodes)
View(warehouse)
warehouse <- inner_join(warehouse, zipcodes, by = "ID")
View(warehouse)
warehouse <- left_join(warehouse, zipcodes, by = "ID")
rm("warehouse")
#Warehouse data frame
warehouse <- bind_cols(Street,city_state, price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
avg_price <- warehouse %>% summarise(mean(price), mean(Size), mean(Space))
dry <- 75
temp_cont <- 65
cooler <- 34
temp <- c(dry, temp_cont, cooler)
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
zipcodes <- read.csv("test.csv") %>% select("Zipcode")
View(zipcodes)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state, zipcodes,price, Size, Space)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
zipcodes <- read.csv("test.csv") %>% select("Zipcode", "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
View(warehouse)
warehouse <- na.omit()
warehouse %>% na.omit
test<- warehouse %>% na.omit
View(test)
warehouse <- warehouse %>% na.omit
rm("test")
rm("outlierReplace")
rm("url1")
rm("a")
rm("avg_price")
rm("states_gdp")
df2<- lapply(paste0('https://www.loopnet.com/california_warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
library(rvest)
df2<- lapply(paste0('https://www.loopnet.com/california_warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
library(stringr)
df2<- lapply(paste0('https://www.loopnet.com/california_warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
df2<- unlist(df2
df2<- unlist(df2)
df2<- as.data.frame(df2)
df2<- as.data.frame(df2)
price2<- df1 %>% filter(str_detect(df2,"Price:")) %>%
separate(df2, sep = ":", c("Text","Fee")) %>%
separate(Fee, sep = "-", c("Fee", "Max"))
price2$Text <- NULL
price2$Max <- NULL
price2$Fee <- gsub("[^0-9\\.]", "", price2$Fee)
price2 <- as.numeric(price2$Fee)
price2<- as.data.frame(price2)
rm("df2")
#Warehouse data frame
warehouse1 <- bind_cols(Street,city_state,price, Size, Space)
warehouse1 %>% summarise(mean(price))
warehouse1 %>% na.omit %>% summarise(mean(price))
warehouse1 %>% na.omit %>% summarise(mean(price * 12))
warehouse1 <- warehouse1 %>% na.omit %>% summarise(mean(price * 12))
View(warehouse)
View(warehouse)
View(warehouse1)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- warehouse1 %>% na.omit %>% summarise(mean(price * 12))
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
na.omit
View(warehouse)
#Warehouse data frame
warehouse1 <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
View(warehouse)
View(warehouse)
View(warehouse)
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
View(warehouse)
dry <- 75
temp_cont <- 65
cooler <- 34
temp <- c(dry, temp_cont, cooler)
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
day <- sample(seq(as.Date('2018/01/01'), as.Date('2019/01/01'), by="day"), )
day <- as.data.frame(day)
View(day)
day <- seq(as.Date('2018/01/01'), as.Date('2019/01/01'), by="day"), )
day <- seq(as.Date('2018/01/01'), as.Date('2019/01/01'), by="day")
day <- as.data.frame(day)
View(day)
warehouse$freq <- 366
View(Street)
View(warehouse)
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq)]
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq)1:11]
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:11]
View(warehouse.expanded)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 30, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
View(warehouse)
warehouse$`replace(price, price > 20, NA)` <- NULL
View(warehouse)
warehouse$replace(price, price > 20, NA) <- NULL
warehouse$`replace(price, price > 20, NA)` <- NULL
View(warehouse)
warehouse$`replace(price, price > 30, NA)` <- NULL
View(warehouse)
View(warehouse)
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 30, NA)) %>%
na.omit
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 30, NA)) %>%
na.omit
View(warehouse)
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
View(warehouse)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size, Space)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:11]
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$freq <- 365
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
View(warehouse.expanded)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$freq <- 365
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
View(warehouse.expanded)
View(warehouse)
rm("dry", "temp_cont", "cooler")
temp <- c(dry, temp_cont, cooler)
temp <- c("dry", "temp_cont", "cooler")
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$freq <- 365
warehouse.expanded <- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
View(warehouse.expanded)
rm(warehouse.expanded)
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$use <- 0
rm(warehouse1)
View(warehouse)
sapply(day, rep.int, times=nrow(378))
day <- sapply(day, rep.int, times = 378)
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
day <- sapply(day, rep.int, times = 375)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$use <- 0
View(day)
day <- seq(as.Date('2018/01/01'), as.Date('2019/01/01'), by="day")
day <- as.data.frame(day)
day <- sapply(day, rep.Date, times = 375)
day <- sapply(day, rep, times = 375)
View(day)
day <- seq(as.Date('2018/01/01'), as.Date('2019/01/01'), by="day")
day <- as.data.frame(day)
View(day)
coredata(day)[rep(seq(nrow(day)),375),]
?coredata
??coredata
day <- coredata(day)[rep(seq(nrow(day)),375),]
day <- day[rep(seq_len(nrow(day)), 375), ]
day <- as.data.frame(day)
View(day)
warehouse <- bind_cols(warehouse,day)
View(warehouse)
warehouse$freq <- NULL
View(warehouse)
capacity_find <- function(size){
utilization <- rnorm(1, mean = .55, std = .5)
stack_height <- sample(c(1,2,3,4))
capacity <- size * utilization * stack_height / 16
return(capacity)
}
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
temp <- c("dry", "temp_cont", "cooler")
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$capacity <- capacity_find(warehouse)
capacity_find <- function(size){
utilization <- rnorm(1, mean = .55)
stack_height <- sample(c(1,2,3,4))
capacity <- size * utilization * stack_height / 16
return(capacity)
}
warehouse$capacity <- capacity_find(warehouse)
warehouse$capacity <- capacity_find(warehouse$Size)
View(warehouse)
warehouse$capacity <- floor(capacity_find(warehouse$Size))
View(warehouse)
#Temperature control
zipcodes <- read.csv("test.csv") %>% select("Zipcode")
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,zipcodes,price, Size)
View(warehouse)
#Temperature control
zipcodes <- read.csv("test.csv") %>% select("Zipcode", "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
#Replacing utliers with NA so our data is more clear and realistic
#I choosed as 20 because most of the warehouses we have looked at had per yer for square footage less than 20 and
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
temp <- c("dry", "temp_cont", "cooler")
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$capacity <- floor(capacity_find(warehouse$Size))
View(warehouse)
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$use <- 0
warehouse <- bind_cols(warehouse,day)
warehouse$freq <- NULL
View(warehouse)
warehouse$adress_2 <- 0
View(warehouse)
#Temperature control
temp <- c("dry", "temp_controlled", "cooler")
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
View(warehouse)
warehouse$lowest_temp <-
if(warehouse$temp == "cooler"){
34} else if(warehouse$temp == "temp_controlled"){
55
} else{75}
View(warehouse)
warehouse <- warehouse %>% mutate(lowest_temp = ifelse(temp == "cooler"),34,ifelse(temp == "temperature_controlled"), 55, 75)
warehouse <- warehouse %>% mutate(lowest_temp = ifelse(temp == "cooler" ,34,ifelse(temp == "temperature_controlled", 55, 75)))
View(warehouse)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.1))
warehouse$capacity <- floor(capacity_find(warehouse$Size))
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$used <- 0
warehouse <- bind_cols(warehouse,day)
warehouse$freq <- NULL
warehouse <- warehouse %>% mutate(lowest_temp = ifelse(temp == "cooler" ,34,ifelse(temp == "temperature_controlled", 55, 75)))
View(warehouse)
warehouse <- warehouse %>%
mutate(lowest_temp = ifelse(temp == "cooler" ,34,55)) %>%
mutate(lowest_temp = ifelse(temp == "temperature_controlled", 55, 75))
View(warehouse)
warehouse <- warehouse %>%
mutate(lowest_temp = if_else(temp == "cooler" ,34,if_else(temp == "temperature_controlled", 55, 75)))
View(warehouse)
warehouse$lowest_temp[warehouse$temp == "cooler"] <- 34
warehouse$lowest_temp[warehouse$temp == "temp_controlled"] <- 55
warehouse$lowest_temp[warehouse$temp == "dry"] <- 75
View(warehouse)
warehouse$highest_temp <- 75
View(warehouse)
#Temperature control
temp <- c("dry", "temp_controlled", "cooler", "frozen")
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.35,.55,.08,.02))
View(warehouse)
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.30,.50,.15,.05))
View(warehouse)
warehouse$lowest_temp[warehouse$temp == "frozen"] <- -15
warehouse$lowest_temp[warehouse$temp == "cooler"] <- 34
warehouse$lowest_temp[warehouse$temp == "temp_controlled"] <- 55
warehouse$lowest_temp[warehouse$temp == "dry"] <- 75
warehouse$highest_temp <- 75
warehouse$lowest_temp[warehouse$temp == "frozen"] <- 0
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$used <- 0
warehouse <- bind_cols(warehouse,day)
warehouse$freq <- NULL
sample(state.name, 10)
rating <- runif(nrow(warehouse), 0, 10)
warehouse$id <- warehouse$ID
warehouse$adress_1 <- warehouse$Street
warehouse$adress_2 <- 0
warehouse$city <- warehouse$city
warehouse$state <- warehouse$State
warehouse$price_per_skid <- warehouse$price * 16 / 365
warehouse$capacity <- warehouse$capacity
warehouse$sq_ft <- warehouse$Size
warehouse$strg_type <- warehouse$temp
warehouse$lowest_temp <- warehouse$lowest_temp
warehouse$highest_temp <- warehouse$highest_temp
warehouse$Day <- warehouse$day
warehouse$Used <- warehouse$used
warehouse$Avg_rating <- rating
View(warehouse)
warehouse <- warehouse[, -c(1:11)]
View(warehouse)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
library(dplyr)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.30,.50,.15,.05))
warehouse$capacity <- floor(capacity_find(warehouse$Size))
warehouse$lowest_temp[warehouse$temp == "frozen"] <- 0
warehouse$lowest_temp[warehouse$temp == "cooler"] <- 34
warehouse$lowest_temp[warehouse$temp == "temp_controlled"] <- 55
warehouse$lowest_temp[warehouse$temp == "dry"] <- 75
warehouse$highest_temp <- 75
warehouse$rating <- runif(nrow(warehouse), 0, 10)
View(warehouse)
warehouse$rating <- round(runif(nrow(warehouse), 0, 10),1)
View(Street)
View(warehouse)
warehouse$freq <- 366
warehouse<- warehouse[rep(row.names(warehouse), warehouse$freq),1:9]
warehouse$used <- 0
warehouse <- bind_cols(warehouse,day)
warehouse$freq <- NULL
warehouse$id <- warehouse$ID
warehouse$adress_1 <- warehouse$Street
warehouse$adress_2 <- 0
warehouse$city <- warehouse$city
warehouse$state <- warehouse$State
warehouse$price_per_skid <- warehouse$price * 16 / 365
warehouse$capacity <- warehouse$capacity
warehouse$sq_ft <- warehouse$Size
warehouse$strg_type <- warehouse$temp
warehouse$lowest_temp <- warehouse$lowest_temp
warehouse$highest_temp <- warehouse$highest_temp
warehouse$Day <- warehouse$day
warehouse$Used <- warehouse$used
warehouse$Avg_rating <- rating
warehouse <- warehouse[, -c(1:11)]
install.packages("RMySQL")
library(RMySQL)

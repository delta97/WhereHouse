routing_number <- sample(40000,paste( sample( 0:9, 9, replace=TRUE ), collapse="" ))
#Routing Number
routing_number <- sample(40000,paste( sample( 0:9, 9, replace=TRUE ), collapse="" ),replace=TRUE)
routing_number <- as.data.frame(routing_number)
View(routing_number)
#Routing Number
routing_number <- sample(1e9:1e10,sample_size,replace=TRUE)
routing_number <- as.data.frame(routing_number)
View(routing_number)
rm("tmp")
user <- data.frame()
#First and Last Names
full_name <- r_full_names(sample_size)
install.packages("generator")
library(generator)
#First and Last Names
full_name <- r_full_names(sample_size)
df <- as.data.frame(full_name)
names <- tidyr::separate(df, full_name, sep = " ", c("First_name", "Last_name" ))
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), )
DOB <- as.data.frame(DOB)
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
#Email
Email <- r_email_addresses(sample_size)
#Email
Email <- r_email_addresses(sample_size)
Email <- as.data.frame(Email)
user <- data.frame()
user$first_name <- names$First_name
rm("user")
user$first_name <- names$First_name
user <- 0
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- DOB
user$phone_num <- phone_num
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
user$phone_num <- Phone_num
user$routing_num <- routing_num
user$routing_num <- routing_number
user$bank_acc <- bank_account
user$user_type <- user_type
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, 0.35))
user$user_type <- user_type
user$email <- Email
user$password <- password
user <- as.data.frame(user)
user <- unlist(user)
user <- as.data.frame(user)
View(user)
user <- list()
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- DOB
user$phone_num <- Phone_num
user$routing_num <- routing_number
user$bank_acc <- bank_account
user$user_type <- user_type
user$email <- Email
user$password <- password
user <- unlist(user)
user <- as.data.frame(user)
View(user)
user <- matrix()
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- DOB
user$phone_num <- Phone_num
user$routing_num <- routing_number
user$bank_acc <- bank_account
user$user_type <- user_type
user$email <- Email
user$password <- password
user <- unlist(user)
user <- as.data.frame(user)
rm("user")
user <- bind_cols(names, data$Street.Address, address_2)
library(dplyr)
user <- bind_cols(names, data$Street.Address, address_2)
adress_2 <- 0
user <- bind_cols(names, data$Street.Address, address_2)
address_2 <- 0
user <- bind_cols(names, data$Street.Address, address_2)
user <- names
View(user)
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
View(user)
#USER DATATABLE
sample_size <- 39909
#First and Last Names
full_name <- r_full_names(sample_size)
df <- as.data.frame(full_name)
names <- tidyr::separate(df, full_name, sep = " ", c("First_name", "Last_name" ))
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, 0.35))
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
#Email
Email <- r_email_addresses(sample_size)
#Email
Email <- r_email_addresses(sample_size)
Email <- as.data.frame(Email)
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), )
DOB <- as.data.frame(DOB)
#Bank Account Number
bank_account <- sample(10000000000:999999999999, sample_size,replace=TRUE)
bank_account <- as.data.frame(bank_account)
#Routing Number
routing_number <- sample(1e9:1e10,sample_size,replace=TRUE)
routing_number <- as.data.frame(routing_number)
#Address
data <- read.csv("data.csv")
address_2 <- 0
#Password
password<- stri_rand_strings(n=40000, length=8, pattern="[A-Za-z0-9]")
password <- as.data.frame(password)
user <- names
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- DOB
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), replace = TRUE )
DOB <- as.data.frame(DOB)
user$DOB <- DOB
View(user)
View(DOB)
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), replace = FALSE )
DOB <- as.data.frame(DOB)
#Date of Birth
DOB <- sample(sample_size, seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), replace = FALSE )
(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = FALSE )
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = FALSE )
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = TRUE )
DOB <- as.data.frame(DOB)
View(DOB)
user$DOB <- DOB
user$phone_num <- Phone_num
user$routing_num <- routing_number
user$bank_acc <- bank_account
user$user_type <- user_type
user$email <- Email
user$password <- password
#Password
password<- stri_rand_strings(n=sample_size, length=8, pattern="[A-Za-z0-9]")
password <- as.data.frame(password)
user$password <- password
user <- unlist(user)
user <- as.data.frame(user)
View(user)
user <- names
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- DOB
user$phone_num <- Phone_num
user$routing_num <- routing_number
user$bank_acc <- bank_account
user$user_type <- user_type
user$email <- Email
user$password <- password
user <- as.data.frame(user)
View(user)
colnames(user)[10] <- "DOB"
colnames(user)[11] <- "phone_num"
colnames(user)[12] <- "routing_num"
colnames(user)[13] <- "bank_acc"
colnames(user)[14] <- "phone_num"
colnames(user)[15] <- "user_type"
colnames(user)[16] <- "email"
colnames(user)[17] <- "password"
colnames(user)[9] <- "DOB"
colnames(user)[10] <- "phone_num"
colnames(user)[11] <- "routing_num"
colnames(user)[12] <- "bank_acc"
colnames(user)[13] <- "phone_num"
colnames(user)[14] <- "user_type"
colnames(user)[15] <- "email"
colnames(user)[16] <- "password"
View(user)
a <- data.frame(DOB,Phone_num, routing_number, bank_account, user_type, Email, password)
user <- full_join(user,a)
user <- left_join(user,a)
user$DOB <- a$DOB
user$phone_num <- a$Phone_num
user$routing_num <- a$routing_number
user$bank_acc <- a$bank_account
user$user_type <- a$user_type
user$email <- a$Email
user$password <- a$password
user$routing_num <- NULL
user$bank_acc <- NULL
View(user)
user <- names
user$first_name <- names$First_name
user$last_name <- names$Last_name
user$address_1 <- data$Street.Address
user$address_2 <- 0
user$city <- data$City
user$state <- data$State
user$zip <- data$Zip.Code
user$DOB <- a$DOB
user$phone_num <- a$Phone_num
user$routing_num <- a$routing_number
user$bank_acc <- a$bank_account
user$user_type <- a$user_type
user$email <- a$Email
user$password <- a$password
user <- as.data.frame(user)
View(user)
user$first_name <- as.character(names$First_name)
user$last_name <- as.character(names$Last_name)
user$address_1 <- as.character(data$Street.Address)
user$address_2 <- as.character(NULL)
user$address_2 <- as.character(0)
user$city <- as.character(data$City)
#USER DATATABLE
sample_size <- 39909
#First and Last Names
full_name <- r_full_names(sample_size)
df <- as.data.frame(full_name)
names <- tidyr::separate(df, full_name, sep = " ", c("First_name", "Last_name" ))
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, 0.35))
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
#Email
Email <- r_email_addresses(sample_size)
Email <- as.data.frame(Email)
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = TRUE )
DOB <- as.data.frame(DOB)
#Bank Account Number
bank_account <- sample(10000000000:999999999999, sample_size,replace=TRUE)
bank_account <- as.data.frame(bank_account)
#Routing Number
routing_number <- sample(1e9:1e10,sample_size,replace=TRUE)
routing_number <- as.data.frame(routing_number)
#Address
data <- read.csv("data.csv")
address_2 <- 0
#Password
password<- stri_rand_strings(n=sample_size, length=8, pattern="[A-Za-z0-9]")
password <- as.data.frame(password)
a <- data.frame(DOB,Phone_num, routing_number, bank_account, user_type, Email, password)
user <- names
user$first_name <- as.character(names$First_name)
user$last_name <- as.character(names$Last_name)
user$address_1 <- as.character(data$Street.Address)
user$address_2 <- as.character(0)
user$city <- as.character(data$City)
user$state <- as.character(data$State)
user$zip <- as.integer(data$Zip.Code)
user$DOB <- as.POSIXct(a$DOB)
user$phone_num <- as.integer(a$Phone_num)
user$user_type <- as.integer(a$user_type)
View(user)
View(user_type)
user$user_type <- as.numeric(a$user_type)
user$user_type <- as.raw(a$user_type)
user$user_type <- as.character(a$user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, 0.35))
user$user_type <- as.character(a$user_type)
user$user_type <- as.logical(a$user_type)
user$user_type <- a$user_type
user$email <- as.character(a$Email)
user$password <- as.character(a$password)
user <- as.data.frame(user)
View(user)
a <- data.frame(DOB,Phone_num, user_type, Email, password)
#USER DATATABLE
sample_size <- 39909
#First and Last Names
full_name <- r_full_names(sample_size)
df <- as.data.frame(full_name)
names <- tidyr::separate(df, full_name, sep = " ", c("First_name", "Last_name" ))
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, 0.35))
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
#Email
Email <- r_email_addresses(sample_size)
Email <- as.data.frame(Email)
#Date of Birth
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = TRUE )
DOB <- as.data.frame(DOB)
#Bank Account Number
bank_account <- sample(10000000000:999999999999, sample_size,replace=TRUE)
bank_account <- as.data.frame(bank_account)
#Routing Number
routing_number <- sample(1e9:1e10,sample_size,replace=TRUE)
routing_number <- as.data.frame(routing_number)
#Address
data <- read.csv("data.csv")
address_2 <- 0
#Password
password<- stri_rand_strings(n=sample_size, length=8, pattern="[A-Za-z0-9]")
password <- as.data.frame(password)
a <- data.frame(DOB,Phone_num, user_type, Email, password)
user <- names
user$first_name <- as.character(names$First_name)
user$last_name <- as.character(names$Last_name)
user$address_1 <- as.character(data$Street.Address)
user$address_2 <- as.character(0)
user$city <- as.character(data$City)
user$state <- as.character(data$State)
user$zip <- as.integer(data$Zip.Code)
user$DOB <- as.POSIXct(a$DOB)
user$phone_num <- as.integer(a$Phone_num)
user$user_type <- a$user_type
user$email <- as.character(a$Email)
user$password <- as.character(a$password)
user <- as.data.frame(user)
View(user)
View(Phone_num)
View(password)
View(Phone_num)
View(user)
library(RMySQL)
con <- dbConnect(MySQL(),
user="g1090429", password="WhereHouse?",
dbname="g1090429", host="mydb.ics.purdue.edu")
View(user)
user <- user[, -c(1:2)]
user <- as.data.frame(user)
View(user)
user <- user[, -c(1:2)]
user <- tibble::rowid_to_column(user, "id")
install.packages("zipcode")
install.packages("generator")
install.packages("RMySQL")
install.packages("random")
install.packages("tidyr")
install.packages("sampling")
install.packages("ggmap")
install.packages("rvest")
install.packages("RMySQL")
install.packages("httr")
install.packages("XML")
install.packages("stringi")
library(tidyverse)
library(rvest)
library(dplyr)
states <- tolower(state.name)
a<-gsub(" ", "-", states, fixed=TRUE)
a<-paste0('https://www.loopnet.com/', states,sep = "_")
a <- paste0(a,"warehouses-for-lease/",sep="")
get_last_page <- function(html){
pages_data <- html %>%
# The '.' indicates the class
html_nodes('.searchPagingBorderless') %>%
# Extract the raw text as a list
html_text()
# The second to last of the buttons is the one
pages_data[(length(pages_data)-1)] %>%
# Take the raw string
unname() %>%
# Convert to number
as.numeric()
}
last_page <- c(11,2,20, 5, 20, 20, 17, 6, 20, 20, 6, 3, 20, 17, 6, 12, 8, 10, 2, 20, 20, 20, 11, 5, 19, 2, 5, 10, 4, 20, 4, 20, 20, 5, 20, 11, 12, 20, 3, 14, 2, 14, 20, 12, 1, 20, 18, 3, 13, 2)
Street <- lapply(paste0("https://www.loopnet.com/warehouses-for-lease/", 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingTitle") %>%
html_text() %>%
str_trim() %>%
gsub('-* Warehouse for Lease', '', .)
})
library(stringr)
library(stringi)
Street <- lapply(paste0("https://www.loopnet.com/warehouses-for-lease/", 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingTitle") %>%
html_text() %>%
str_trim() %>%
gsub('-* Warehouse for Lease', '', .)
})
Street <- unlist(Street)
Street <- as.data.frame(Street)
#City and State
city_state <- lapply(paste0('https://www.loopnet.com/warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingDescription b") %>%
html_text() %>%
str_trim()
})
city_state <- unlist(city_state)
city_state <- as.data.frame(city_state)
city_state <- city_state %>% separate(city_state, sep = "," ,c("city","State"))
install.packages("tidyverse")
library(tidyverse)
city_state <- city_state %>% separate(city_state, sep = "," ,c("city","State"))
#Zipcodes
zipcodes <- read.csv("test.csv") %>% select("Zipcode", "ID")
#Attributes
df1 <- lapply(paste0('https://www.loopnet.com/warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
#Attributes
df1 <- lapply(paste0('https://www.loopnet.com/warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
df1 <- unlist(df1)
df1 <- as.data.frame(df1)
#Price per skid per month
price <- df1 %>% filter(str_detect(df1,"Price:")) %>%
separate(df1, sep = ":", c("Text","Fee")) %>%
separate(Fee, sep = "-", c("Fee", "Max"))
price$Text <- NULL
price$Max <- NULL
price$Fee <- gsub("[^0-9\\.]", "", price$Fee)
price <- as.numeric(price$Fee)
price <- as.data.frame(price)
#Building Size
building_size <- df1 %>% filter(str_detect(df1, "Building Size")) %>%
separate(df1, sep = ":", c("Text", "Size"))
building_size$Text <- NULL
building_size$Size <- gsub("[^0-9\\]", "", building_size$Size)
Size <- as.numeric(building_size$Size)
Size <- as.data.frame(Size)
#Temperature control
temp <- c("dry", "temp_controlled", "cooler", "frozen")
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- left_join(warehouse, zipcodes, by = "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.30,.50,.15,.05))
warehouse$capacity <- floor(capacity_find(warehouse$Size))
warehouse$lowest_temp[warehouse$temp == "frozen"] <- 0
warehouse$lowest_temp[warehouse$temp == "cooler"] <- 34
warehouse$lowest_temp[warehouse$temp == "temp_controlled"] <- 55
warehouse$lowest_temp[warehouse$temp == "dry"] <- 75
warehouse$highest_temp <- 75
warehouse$rating <- round(runif(nrow(warehouse), 0, 10),1)
View(warehouse)
#Warehouse data frame
warehouse <- bind_cols(Street,city_state,price, Size)
View(warehouse)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 20, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
warehouse <- tibble::rowid_to_column(warehouse, "ID")
View(zipcodes)
warehouse$capacity <- floor(capacity_find(warehouse$Size))
View(warehouse)
View(warehouse)
warehouse <- left_join(warehouse, zipcodes, by = "ID")
View(warehouse)
warehouse <- warehouse %>% na.omit
View(warehouse)

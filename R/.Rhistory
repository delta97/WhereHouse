View(selected_user)
warehouses <- which(warehouse$temp == lessee_pref)
warehouses <- as.data.frame(warehouses)
View(warehouses)
warehouses <- warehouses[warehouses,]
View(warehouses)
warehouses <- warehouse[warehouses,]
View(warehouses)
warehouses <- warehouse[which(warehouse$temp == lessee_pref),]
View(warehouses)
head(zipcode)
lat_long <- data(zipcode)
library(zipcode)
lat_long <- data(zipcode)
View(data)
rm(data)
lat_long <- data(zipcode)
data(zipcode)
head(zipcode)
zipcode$zip <- as.numeric(zipcode$zip)
View(zipcode)
warehouse$lat <- warehouse[which(warehouse$Zipcode == zipcode$zip),4]
which(warehouse$Zipcode == zipcode$zip)
warehouse[which(warehouse$Zipcode == zipcode$zip),1]
colnames(warehouse$Zipcode) <- "Zip"
colnames(warehouse, warehouse$Zipcode) <- "Zip"
zipcode$Zipcode <- as.numeric(zipcode$zip)
warehouse <- left_join(warehouse,zipcode,by = "Zipcode")
View(warehouse)
warehouse$lat <- NULL
warehouse$zip <- NULL
warehouse$city.y <- NULL
install.packages("geosphere")
install.packages("geosphere")
library(geosphere)
library(geosphere)
install.packages("geosphere")
library(geosphere)
user <- left_join(user, zipcode, by= "Zipcode")
library(tidyverse)
library(generator)
library(zipcode)
library(tidyr)
library(dplyr)
library(sampling)
library(ggmap)
library(rvest)
library(stringr)
library(ggplot2)
library(stringi)
library(RMySQL)
library(geosphere)
user <- left_join(user, zipcode, by= "Zipcode")
View(user)
View(user)
c(user$zip,user$city,user$state) <- NULL
user$zip <- NULL
user$city <- NULL
user$state <- NULL
distance <- distm(c(selected_user$longitude, selected_user$longitude), c(warehouses$longitude, warehouses$latitude), fun = distHaversine)
distance <- distm(c(as.vector(selected_user$longitude), as.vector(selected_user$longitude)), c(as.vector(warehouses$longitude), as.vector(warehouses$latitude)), fun = distHaversine)
c(selected_user$longitude, selected_user$longitude)
selected_user <- user[selected_id, ]
warehouses <- warehouse[which(warehouse$temp == lessee_pref),]
distance <- distm(c(selected_user$longitude, selected_user$longitude), c(warehouses$longitude, warehouses$latitude), fun = distHaversine)
distance <- distm(c(selected_user$longitude, selected_user$longitude), c(warehouses$longitude[1,], warehouses$latitude[1,]), fun = distHaversine)
View(warehouses)
View(selected_user)
distance <- distm(c(selected_user$longitude, selected_user$latitude), c(warehouses$longitude[1,], warehouses$latitude[1,]), fun = distHaversine)
distance <- distm(c(user$longitude, user$latitude), c(warehouses$longitude , warehouses$latitude), fun = distHaversine)
distance <- distm(c(user$longitude[1,], user$latitude[1,]), c(warehouses$longitude[1,] , warehouses$latitude[1,]), fun = distHaversine)
distance <- distm(c(user$longitude[,1], user$latitude[1,]), c(warehouses$longitude[1,] , warehouses$latitude[1,]), fun = distHaversine)
user1 < - user[1,]
user1 < - user[1,]
user[1,]
head(user[1,]
)
distance <- distm(c(user[1,]$longitude, user[1,]$latitude), c(warehouses[1,]$longitude , warehouses[1,]$latitude), fun = distHaversine)
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[1,]$longitude , warehouses[1,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
View(distance)
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses$longitude , warehouses$latitude), fun = distHaversine)
for(i in 1:nrow(warehouses)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[i,]$longitude , warehouses[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
distance <- as.data.frame(distance)
return(distance)
}
View(distance)
for(i in 1:nrow(warehouses)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[i,]$longitude , warehouses[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
distance <- as.data.frame(distance)
}
View(distance)
i
for(i in 1:nrow(warehouses)){
distance <- apply(distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[i,]$longitude , warehouses[i,]$latitude), fun = distHaversine))
distance <- distance * 0.000621371
distance <- as.data.frame(distance)
}
for(i in 1:nrow(warehouses)){
distance <- apply(warehouses, distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[i,]$longitude , warehouses[i,]$latitude), fun = distHaversine))
distance <- distance * 0.000621371
distance <- as.data.frame(distance)
}
distance <- lapply(warehouse, distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses$longitude , warehouses$latitude), fun = distHaversine))
distance_calc <- function(lon,lat){
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(lon , lat), fun = distHaversine)
}
distance <- lapply(warehouse, distance_calc(warehouse$longitude, warehouse$latitude)
)
filter_1 <- matrix()
f <- 0
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(user[i,]$longtitude , user[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i]
j <- j + 1
}
}
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(user[i,]$longtitude , user[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i]
j <- j + 1
}
}
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longtitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i]
j <- j + 1
}
}
rm(warehouses)
rm(address_2)
rm(afress_2)
rm(adress_2)
View(filter_1)
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longtitude , warehouse[i,]$latitude), fun = distHaversine)
i <- 1
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longtitude , warehouse[i,]$latitude), fun = distHaversine)
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[1,]$longtitude , warehouse[1,]$latitude), fun = distHaversine)
View(distance)
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouses[1,]$longitude , warehouses[1,]$latitude), fun = distHaversine)
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[1,]$longitude , warehouse[1,]$latitude), fun = distHaversine)
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i]
j <- j + 1
}
}
j <- 0
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i]
j <- j + 1
}
}
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j] <- warehouse[i,]
j <- j + 1
}
}
View(filter_1)
filter_1 <- unlist(filter_1)
filter_1 <- as.data.frame(filter_1)
View(filter_1)
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j,] <- warehouse[i,]
j <- j + 1
}
}
View(filter_1)
filter_1 <- data.frame()
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j,] <- warehouse[i,]
j <- j + 1
}
}
View(filter_1)
filter_1 <- unlist(filter_1)
filter_1 <- as.data.frame(filter_1)
j <- 1
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j,] <- warehouse[i,]
j <- j + 1
}
}
filter_1 <- unlist(filter_1)
filter_1 <- as.data.frame(filter_1)
for (i in 1:nrow(warehouse)){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse[i,]$longitude , warehouse[i,]$latitude), fun = distHaversine)
distance <- distance * 0.000621371
if(distance <- 200){
filter_1[j,] <- warehouse[i,]
j <- j + 1
}
}
View(filter_1)
which(distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(warehouse$longitude , warehouse$latitude), fun = distHaversine) *  0.000621371 < 200)
View(distance_calc)
View(distance_calc)
mapply(distance_calc, warehouse$longitude, warehouse$latitude)
View(distance_calc)
View(distance_calc)
calc_dist <- function(lon,lat){
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(lon , lat), fun = distHaversine) * 0.000621371
}
mapply(distance_calc, warehouse$longitude, warehouse$latitude)
calc_dist <- function(lon,lat){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(lon , lat), fun = distHaversine)    distance <- distance * 0.000621371
calc_dist <- function(lon,lat){
distance <- distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(lon , lat), fun = distHaversine)    distance <- distance * 0.000621371
calc_dist <- function(lon,lat){
distm(c(user[selected_id,]$longitude, user[selected_id,]$latitude), c(lon , lat), fun = distHaversine)
}
distance <- mapply(distance_calc, warehouse$longitude, warehouse$latitude)
distance <- distance * 0.000621371
warehouses <- warehouse[which(distance < 200)]
warehouses <- warehouse[which(distance < 200),]
View(warehouses)
selected_id <- sample(nrow(lessee), 1, 1)
selected_user <- user[selected_id, ]
distance <- mapply(distance_calc, warehouse$longitude, warehouse$latitude)
distance <- distance * 0.000621371
warehouses <- warehouse[which(distance < 200),]
warehouses <- warehouse[which(warehouse$temp == lessee_pref),]
warehouses <- which(distnce < 200)
warehouses <- which(distance < 200)
warehouses <- warehouse[which(distance < 200),]
View(warehouses)
Street <- lapply(paste0("https://www.loopnet.com/warehouses-for-lease/", 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingTitle") %>%
html_text() %>%
str_trim() %>%
gsub('-* Warehouse for Lease', '', .)
})
Street <- lapply(paste0("https://www.loopnet.com/warehouses-for-lease/", 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingTitle") %>%
html_text() %>%
str_trim() %>%
gsub('-* Warehouse for Lease', '', .)
})
Street <- unlist(Street)
Street <- as.data.frame(Street)
#City and State
city_state <- lapply(paste0('https://www.loopnet.com/warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingDescription b") %>%
html_text() %>%
str_trim()
})
city_state <- unlist(city_state)
city_state <- as.data.frame(city_state)
city_state <- city_state %>% separate(city_state, sep = "," ,c("city","State"))
#Attributes
df1 <- lapply(paste0('https://www.loopnet.com/warehouses-for-lease/', 1:20,sep="/"),
function(url){
url %>% read_html() %>%
html_nodes(".listingAttributes tr") %>%
html_text() %>%
str_trim()
})
df1 <- unlist(df1)
df1 <- as.data.frame(df1)
#Price per skid per month
price <- df1 %>% filter(str_detect(df1,"Price:")) %>%
separate(df1, sep = ":", c("Text","Fee")) %>%
separate(Fee, sep = "-", c("Fee", "Max"))
price$Text <- NULL
price$Max <- NULL
#Price per skid per month
price <- df1 %>% filter(str_detect(df1,"Price:")) %>%
separate(df1, sep = ":", c("Text","Fee")) %>%
separate(Fee, sep = "-", c("Fee", "Max"))
View(price)
price$Text <- NULL
price$Max <- NULL
price$Fee <- gsub("[^0-9\\.]", "", price$Fee)
price <- as.numeric(price$Fee)
price <- as.data.frame(price)
View(price)
#Building Size
building_size <- df1 %>% filter(str_detect(df1, "Building Size")) %>%
separate(df1, sep = ":", c("Text", "Size"))
building_size$Text <- NULL
building_size$Size <- gsub("[^0-9\\]", "", building_size$Size)
Size <- as.numeric(building_size$Size)
Size <- as.data.frame(Size)
#Warehouse data frame
warehouse <- data.frame(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 30, NA)) %>%
na.omit
warehouse$`replace(price, price > 20, NA)` <- NULL
View(warehouse)
warehouse$`replace(price, price > 30, NA)` <- NULL
View(warehouse)
write.csv(warehouse,'zipcode_data.csv')
warehouse <- left_join(warehouse,zipcode, by = "City" & "State")
warehouse <- left_join(warehouse,zipcode, by = "City")
View(zipcode)
View(warehouse)
warehouse <- left_join(warehouse,zipcode, by = "city")
View(warehouse)
#Warehouse data frame
warehouse <- data.frame(Street,city_state,price, Size)
warehouse <- as.data.frame(warehouse) %>%
mutate(price = price * 12) %>%
mutate(price, replace(price, price > 30, NA)) %>%
na.omit
warehouse$`replace(price, price > 30, NA)` <- NULL
View(warehouse)
rm(gen_lessee)
rm(distance_calc())
rm(distance_calc)
rm(get_last_page)
rm(x)
rm(states)
rm(selected_id)
rm(sample_size)
rm(specific)
rm(owner_id)
rm(lessee_pref)
rm(lesse_num)
rm(lat_long)
rm(last_page)
rm(j)
rm(i)
rm(f)
rm(full_name)
rm(expiration_year)
rm(expiration_month)
rm(capacity)
rm(distance)
View(a)
rm(all_cons)
rm(con)
rm(credit_card_num)
rm(CVC)
rm(df)
rm(DOB)
rm(Email)
rm(expiration)
rm(lessee)
rm(names)
rm(password)
rm(Phone_num)
rm(selected_user)
rm(user)
rm(user_type)
View(sam)
rm(sam)
View(subset_1)
rm(subset_1)
rm(warehouses)
View(zipcodes)
rm(zipcodes)
rm(filter_1)
View(warehouse)
warehouse <- tibble::rowid_to_column(warehouse, "ID")
warehouse <- warehouse %>% na.omit
warehouse$temp <- sample(temp, nrow(warehouse), replace = TRUE, prob = c(.30,.50,.15,.05))
#Capacity
capacity <- floor(capacity_find(warehouse$Size))
View(capacity_find)
warehouse$capacity <- capacity
View(warehouse)
warehouse$lowest_temp[warehouse$temp == "frozen"] <- 0
warehouse$lowest_temp[warehouse$temp == "cooler"] <- 34
warehouse$lowest_temp[warehouse$temp == "temp_controlled"] <- 55
warehouse$lowest_temp[warehouse$temp == "dry"] <- 75
warehouse$highest_temp <- 75
warehouse$Price_per_skid <- warehouse$price *16 / 365
warehouse$Adress_2 <- 0
View(warehouse)
head(warehouse)
owner <- company_names
colnames(owner)[1] <- "Company_name"
a <- bind_cols(bank_account,routing_number)
owner$bank_acc <- a$bank_account
owner$routing_num <- a$routing_number
View(owner)
specific <- sample(1:1000,3)
owner <- owner[sample(nrow(owner),399),]
sample_size <- lesse_num + nrow(owner)
lesse_num <- nrow(owner) * 100
credit_card_num <- r_credit_card_numbers(lesse_num)
credit_card_num <- gsub("-","", credit_card_num)
credit_card_num <- as.data.frame(credit_card_num)
expiration_month <- sample(1:12,lesse_num, replace = TRUE)
expiration_year <- sample(2018:2050, lesse_num, replace = TRUE)
expiration <- data.frame(expiration_month, expiration_year)
CVC <- sample(100:999, lesse_num, replace = TRUE)
CVC <- as.data.frame(CVC)
sample_size <- lesse_num + nrow(owner)
full_name <- r_full_names(sample_size)
df <- as.data.frame(full_name)
names <- tidyr::separate(df, full_name, sep = " ", c("First_name", "Last_name" ))
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#User type
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
user_type <- as.data.frame(rbinom(sample_size, 1, nrow(owner)/ sample_size))
sum(user_type) - length(user_type)
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
#Phone Number
Phone_num <- r_phone_numbers(sample_size)
Phone_num <- as.data.frame(Phone_num)
Email <- r_email_addresses(sample_size)
Email <- as.data.frame(Email)
DOB <- sample(seq(as.Date('1950/01/01'), as.Date('2000/01/01'), by="day"), sample_size, replace = TRUE )
DOB <- as.data.frame(DOB)
data(zipcode)
View(zipcode)
